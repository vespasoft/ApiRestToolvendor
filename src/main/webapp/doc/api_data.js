define({ "api": [  {    "type": "post",    "url": "/user/auth",    "title": "Crear",    "version": "1.0.0",    "name": "UserAuthentication",    "group": "Authentication",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "http://toolvendor-beecode.rhcloud.com/rest/user/auth",        "type": "post"      }    ],    "description": "<p>Este método se utiliza para autenticar a un usuario. Las columnas requeridas son <code> email, password</code>. La solicitud retorna un JSON con la informacion con <code>status 200</code> en caso de tener exito, de lo contrario devuelve <code>status 400</code>. Para mas informacion vease los ejemplos a continuación.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Email del usuario.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>Password del usuario.</p>"          }        ]      }    },    "filename": "source_doc/documentation.js",    "groupTitle": "Authentication",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>true</code> si los datos fueron validados y autorizados por el servidor.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>Descripción del mensaje devuelto desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato <code>json</code>, de la entidad autorizada.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n      \"success\": true,\n      \"message\": \"Bienvenido al sistema toolvendor\",\n      \"tokenId\": \"eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiIxIiwiaWF0IjoxNDg1ODY2OTQ3LCJzdWIiOiIxIiwiaXNzIjoiTHVpcyBNYW51ZWwgVmVzcGEifQ.4MM6CZxv1NVCDo5Fugqs-h3ERcQWhMCuH8stTcETglM\",\n      \"result\": {\n             \"id\": 1,\n             \"createdAt\": 1483594440000,\n             \"email\": \"vespaluis@gmail.com\",\n             \"enabled\": true,\n             \"lastUpdate\": null,\n             \"latitud\": null,\n             \"longitude\": null,\n             \"name\": \"Luis Manuel Vespa\",\n             \"password\": \"vt1cowt0\",\n             \"phone\": \"+50760846611\",\n             \"photo\": \"user.png\",\n             \"usertype\": {\n               \"id\": 1,\n               \"description\": \"SUPER ADMIN\",\n               \"type\": \"A\",\n               \"companyId\": 1\n             },\n             \"companyId\": 1,\n             \"city\": {\n               \"id\": 1,\n               \"country\": {\n                 \"id\": 1,\n                 \"name\": \"Panama\",\n                 \"alpha2\": \"PA\",\n                 \"alpha3\": \"PAN\",\n                 \"number\": null\n               },\n               \"city\": \"Ciudad Panama\"\n             },\n             \"country\": {\n               \"id\": 1,\n               \"name\": \"Panama\",\n               \"alpha2\": \"PA\",\n               \"alpha3\": \"PAN\",\n               \"number\": null\n             }\n      }\n  }",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>false</code> si los datos NO fueron autorizados por el servidor para iniciar sesion.</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>Descripción del mensaje devuelto desde el servidor.</p>"          },          {            "group": "Error 4xx",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>devuelve <code>null</code>, debido a que los parametros suministrados no fue validados por el servidor.</p>"          }        ]      },      "examples": [        {          "title": "HTTP/1.1 401 Unauthorized",          "content": " HTTP/1.1 401 Unauthorized\n{\n     \"success\": false,\n     \"message\": \"The username or password is invalid.\"\n }",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/category/:id",    "title": "Borrar",    "version": "1.0.0",    "group": "Categoria",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "http://toolvendor-beecode.rhcloud.com/rest/category/91",        "type": "delete"      }    ],    "description": "<p>Permite borrar una Categoria. Solo es posible suprimir la Categoria, si ésta no ha sido vinculada a un Establecimiento. Para eliminarla, debe indicar el <code>id</code> de la Categoria a borrar. La solicitud devuelve un objeto con un parámetro <code>success=true</code> en caso de éxito. De lo contrario, esta llamada devuelve un error ( <code>success=false</code> ) . Para mas información vease los ejemplos a continuación.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "Access-Token",            "description": "<p>El método requiere Token en el Header de la petición</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>El <code>ID</code> de la Categoria a borrar.</p>"          }        ]      }    },    "name": "BorraCategoria",    "filename": "source_doc/documentation.js",    "groupTitle": "Categoria",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>true</code> en caso de exito</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>mensaje descriptivo de la informacion devuelta desde el servidor</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\": true,\n  \"message\": \"El registro se eliminó exitosamente.\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "success:false",            "description": "<p>ocurrio un error la ejecucion de la solicitud de borrado</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>mensaje descriptivo del error devuelto desde el servidor</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"success\": false,\n  \"message\": \"Ocurrio un error al intentar borrar\"\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/category",    "title": "Crear",    "version": "1.0.0",    "name": "CreateCategoria",    "group": "Categoria",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "http://toolvendor-beecode.rhcloud.com/rest/category",        "type": "post"      }    ],    "description": "<p>Crea un nuevo objeto Categoria. Las columnas guardar son <code>companyId, category</code>. La solicitud retorna un JSON con la informacion con <code>status 200</code> en caso de tener exito, de lo contrario devuelve <code>status 400</code>. Para mas informacion vease los ejemplos a continuación.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "Access-Token",            "description": "<p>El método requiere Token en el Header de la petición</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "companyId",            "description": "<p>Id de la compañia del usuario.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "category",            "description": "<p>La descripción de la Categoria que se va a mostrar al usuario.</p>"          }        ]      }    },    "filename": "source_doc/documentation.js",    "groupTitle": "Categoria",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>true</code> si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>Descripción del mensaje devuelto desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato <code>json</code>, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"message\" : \"El registro se guardó exitosamente.\",\n  \"result\"  : [\n         {\n             \"id\" : 135e656e6cda8640820350816ab59f2d,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/category/:id",    "title": "Editar",    "version": "1.0.0",    "name": "EditCategoria",    "group": "Categoria",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "http://toolvendor-beecode.rhcloud.com/rest/category/91",        "type": "put"      }    ],    "description": "<p>Actualiza los detalles de la Categoria específica, mediante el establecimiento de los valores de los parámetros pasados. Cualquiera de los parámetros no previstos serán dejados sin cambios. Las columnas a actualizar son <code>name, description, photo</code>. Tenga en cuenta que el atributo <code>id</code> no es editable. La solicitud retorna un JSON con la informacion con <code>status 200</code> en caso de tener exito, de lo contrario devuelve <code>status 400</code>. Para mas informacion vease los ejemplos a continuación.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "Access-Token",            "description": "<p>El método requiere Token en el Header de la petición</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>un numero entero (unique ID - PrimaryKey) para actualizar en el modelo.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "companyId",            "description": "<p>ID de la compañia del usuario.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "category",            "description": "<p>La descripción de la Categoria que se va a actualizar.</p>"          }        ]      }    },    "filename": "source_doc/documentation.js",    "groupTitle": "Categoria",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>true</code> si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>Descripción del mensaje devuelto desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato <code>json</code>, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"message\" : \"El registro se guardó exitosamente.\",\n  \"result\"  : [\n         {\n             \"id\" : 135e656e6cda8640820350816ab59f2d,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "success:false",            "description": "<p>ocurrio un error la ejecucion de la solicitud de edición</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>mensaje descriptivo del error devuelto desde el servidor</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"success\": false,\n  \"message\": \"No se encontro el id X\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/category",    "title": "Listar",    "version": "1.0.0",    "name": "GetAll",    "group": "Categoria",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "http://toolvendor-beecode.rhcloud.com/rest/category",        "type": "get"      }    ],    "description": "<p>Devuelve una lista de todas las Categorias. Las Categorias se devuelven ordenadas por fecha de creación, las Categorias más recientemente creadas aparecen en primer lugar. Las columnas disponibles a mostrar son <code>id, companyId, category</code></p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "Access-Token",            "description": "<p>El método requiere Token en el Header de la petición</p>"          }        ]      }    },    "filename": "source_doc/documentation.js",    "groupTitle": "Categoria",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve true si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato json, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"result\"  : [\n         {\n             \"id\" : 1,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/company/:id",    "title": "Leer",    "version": "1.0.0",    "name": "GetCategoria",    "group": "Categoria",    "description": "<p>Recupera los datos de la Empresa cliente. Suministrar el <code>id</code> de la Empresa. que se obtiene cuando el usuario se autentica. La respuesta devuelve un conjunto de variables, la variable <code>result</code> contiene JSON con las siguientes columnas: <code>id, company, contactName, email, phone, address, active, building, postalCode, country, city</code>.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>un numero entero (unique ID - PrimaryKey) para leer en la tabla</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "Access-Token",            "description": "<p>El método requiere Token en el Header de la petición</p>"          }        ]      }    },    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "http://toolvendor-beecode.rhcloud.com/rest/company/1",        "type": "get"      }    ],    "filename": "source_doc/documentation.js",    "groupTitle": "Categoria",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve true si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato json, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"result\"  : [\n         {\n             \"id\" : 1,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/category/:id",    "title": "Leer",    "description": "<p>Recupera los detalles de una Categoria existente. Suministrar el <code>id</code> de Categoria para devolver la información de la Categoria correspondiente. La respuesta devuelve un conjunto de variables, la variable <code>result</code> contiene JSON con las siguientes columnas: <code>id, companyId, category</code>.</p>",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>un numero entero (unique ID - PrimaryKey) para leer en la tabla</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "Access-Token",            "description": "<p>El método requiere Token en el Header de la petición</p>"          }        ]      }    },    "name": "GetCategoria",    "group": "Categoria",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "http://toolvendor-beecode.rhcloud.com/rest/category/91",        "type": "get"      }    ],    "filename": "source_doc/documentation.js",    "groupTitle": "Categoria",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve true si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato json, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"result\"  : [\n         {\n             \"id\" : 1,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/customer/:id",    "title": "Borrar",    "version": "1.0.0",    "group": "Cliente",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "http://toolvendor-beecode.rhcloud.com/rest/customer/105",        "type": "delete"      }    ],    "description": "<p>Permite borrar un Cliente. Solo es posible suprimir el Cliente, si éste no ha sido vinculado con un(a) <code>Usuario, Visita, Orden</code>. Para eliminarlo, debe indicar el <code>id</code> del Cliente a borrar. La solicitud devuelve un objeto con un parámetro <code>success=true</code> en caso de éxito. De lo contrario, esta llamada devuelve un error ( <code>success=false</code> ) . Para mas información vease los ejemplos a continuación.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>El <code>id</code> del Cliente que se va a borrar.</p>"          }        ]      }    },    "name": "BorraCliente",    "filename": "source_doc/documentation.js",    "groupTitle": "Cliente",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>true</code> en caso de exito</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>mensaje descriptivo de la informacion devuelta desde el servidor</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\": true,\n  \"message\": \"El registro se eliminó exitosamente.\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "success:false",            "description": "<p>ocurrio un error la ejecucion de la solicitud de borrado</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>mensaje descriptivo del error devuelto desde el servidor</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"success\": false,\n  \"message\": \"Ocurrio un error al intentar borrar\"\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/customer/",    "title": "Crear",    "version": "1.0.0",    "name": "CreateCliente",    "group": "Cliente",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "http://toolvendor-beecode.rhcloud.com/rest/customer/",        "type": "post"      }    ],    "description": "<p>Crea un nuevo objeto Cliente. Las columnas guardar son <code>userId, createdAt, companyName, contactName, contactPhone, contactEmail, active, building, street, postalCode, reference, latitud, longitude, companyId, city, country</code>. La solicitud retorna un JSON con la informacion con <code>status 200</code> en caso de tener exito, de lo contrario devuelve <code>status 400</code>. Para mas información vease los ejemplos a continuación.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "userId",            "description": "<p>Id del usuario a asignar el cliente.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "companyName",            "description": "<p>Nombre de la empresa cliente.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "contactName",            "description": "<p>Nombre completo del representante de la empresa.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "contactPhone",            "description": "<p>Número de telefono del representante de la empresa.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "contactEmail",            "description": "<p>Direccion de correo electronico del representante.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "active",            "description": "<p>Active es una variable tipo Bandera que indica si el cliente está activo o inactivo en el sistema.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "building",            "description": "<p>En esta columna se almacena el nombre de eficio, casa u oficina de la empresa.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "street",            "description": "<p>En esta columna se almacena la direccion de las calles de la empresa.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "reference",            "description": "<p>Una referencia de la direccion de la empresa.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "latitud",            "description": "<p>Latitud de la ubicación del cliente.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "longitude",            "description": "<p>En esta columna se almacena la direccion de las calles de la empresa.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "companyId",            "description": "<p>Numero telefonico de contacto al cliente.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "city",            "description": "<p>Objeto City con los datos de la ciudad del cliente.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "postalCode",            "description": "<p>Codigo Postal del pais del cliente.</p>"          }        ]      }    },    "filename": "source_doc/documentation.js",    "groupTitle": "Cliente",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>true</code> si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>Descripción del mensaje devuelto desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato <code>json</code>, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"message\" : \"El registro se guardó exitosamente.\",\n  \"result\"  : [\n         {\n             \"id\" : 135e656e6cda8640820350816ab59f2d,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/customer/:id",    "title": "Editar",    "version": "1.0.0",    "name": "EditCliente",    "group": "Cliente",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "http://toolvendor-beecode.rhcloud.com/rest/customer/135e656e6cda8640820350816ab59f2d",        "type": "put"      }    ],    "description": "<p>Actualiza los detalles del Cliente específico, mediante la identificación de los valores de los parámetros suministrados. Cualquiera de los parámetros no previstos serán dejados sin cambios. Las columnas a actualizar son<br> <code>first_name, last_name, email, password, photo, phone, security_question, answer</code>.<br> Tenga en cuenta que el atributo <code>id</code> no es editable. La solicitud retorna un JSON con la informacion con <code>status 200</code> en caso de tener exito, de lo contrario devuelve <code>status 400</code>. Para mas información vease los ejemplos a continuación.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Id del cliente a modificar.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "userId",            "description": "<p>Id del usuario a asignar el cliente.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "companyName",            "description": "<p>Nombre de la empresa cliente.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "contactName",            "description": "<p>Nombre completo del representante de la empresa.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "contactPhone",            "description": "<p>Número de telefono del representante de la empresa.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "contactEmail",            "description": "<p>Direccion de correo electronico del representante.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "active",            "description": "<p>Active es una variable tipo Bandera que indica si el cliente está activo o inactivo en el sistema.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "building",            "description": "<p>En esta columna se almacena el nombre de eficio, casa u oficina de la empresa.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "street",            "description": "<p>En esta columna se almacena la direccion de las calles de la empresa.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "reference",            "description": "<p>Una referencia de la direccion de la empresa.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "latitud",            "description": "<p>Latitud de la ubicación del cliente.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "longitude",            "description": "<p>En esta columna se almacena la direccion de las calles de la empresa.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "companyId",            "description": "<p>Numero telefonico de contacto al cliente.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "city",            "description": "<p>Objeto City con los datos de la ciudad del cliente.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "postalCode",            "description": "<p>Codigo Postal del pais del cliente.</p>"          }        ]      }    },    "filename": "source_doc/documentation.js",    "groupTitle": "Cliente",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>true</code> si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>Descripción del mensaje devuelto desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato <code>json</code>, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"message\" : \"El registro se guardó exitosamente.\",\n  \"result\"  : [\n         {\n             \"id\" : 135e656e6cda8640820350816ab59f2d,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "success:false",            "description": "<p>ocurrio un error la ejecucion de la solicitud de edición</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>mensaje descriptivo del error devuelto desde el servidor</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"success\": false,\n  \"message\": \"No se encontro el id X\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/customer/",    "title": "Listar",    "version": "1.0.0",    "name": "GetAll",    "group": "Cliente",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "http://toolvendor-beecode.rhcloud.com/rest/customer/",        "type": "put"      }    ],    "description": "<p>Retorna una lista de todos los Clientes asignados al usuario. Los Clientes se devuelven ordenados por fecha de creación, los Clientes más recientemente creados aparecen en primer lugar. Las columnas disponibles a mostrar son <code>userId, createdAt, companyName, contactName, contactPhone, contactEmail, active, building, street, postalCode, reference, latitud, longitude, companyId, city, country</code></p>",    "filename": "source_doc/documentation.js",    "groupTitle": "Cliente",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve true si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato json, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"result\"  : [\n         {\n             \"id\" : 1,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/customer/:id",    "title": "Leer",    "description": "<p>Recupera los detalles de un Cliente existente. Suministrar el <code>id</code> del Cliente para devolver la información del Cliente correspondiente. La respuesta devuelve un conjunto de variables, la variable <code>result</code> contiene JSON con las siguientes columnas: <br> <code>userId, createdAt, companyName, contactName, contactPhone, contactEmail, active, building, street, postalCode, reference, latitud, longitude, companyId, city, country</code>.</p>",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>El <code>id</code> del Cliente que se está leyendo.</p>"          }        ]      }    },    "name": "GetCliente",    "group": "Cliente",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "http://toolvendor-beecode.rhcloud.com/rest/customer/105",        "type": "get"      }    ],    "filename": "source_doc/documentation.js",    "groupTitle": "Cliente",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve true si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato json, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"result\"  : [\n         {\n             \"id\" : 1,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/company",    "title": "Crear",    "version": "1.0.0",    "name": "CreateCompany",    "group": "Empresas",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "http://toolvendor-beecode.rhcloud.com/rest/company",        "type": "post"      }    ],    "description": "<p>Crea un nuevo objeto Company. Las columnas guardar son <code> company, contactName, email, phone, address, building, city, postalCode</code>. La solicitud retorna un JSON con la informacion con <code>status 200</code> en caso de tener exito, de lo contrario devuelve <code>status 400</code>. Para mas informacion vease los ejemplos a continuación.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "company",            "description": "<p>Id de la compañia del usuario.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "contactName",            "description": "<p>La descripción de la Categoria que se va a mostrar al usuario.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Email de la empresa y/o usuario</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "phone",            "description": "<p>Número de telefono</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "address",            "description": "<p>Dirección básica de la empresa</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "building",            "description": "<p>Dirección del edificio u oficina</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "city",            "description": "<p>Object[City] con los datos de la ciudad y el pais.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "postalCode",            "description": "<p>Codigo Postal de la empresa.</p>"          }        ]      }    },    "filename": "source_doc/documentation.js",    "groupTitle": "Empresas",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>true</code> si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>Descripción del mensaje devuelto desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato <code>json</code>, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"message\" : \"El registro se guardó exitosamente.\",\n  \"result\"  : [\n         {\n             \"id\" : 135e656e6cda8640820350816ab59f2d,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/product/:id",    "title": "Borrar",    "version": "1.0.0",    "group": "Producto",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/product/135e656e6cda8640820350816ab59f2d",        "type": "delete"      }    ],    "description": "<p>Permite borrar un Producto. Solo es posible suprimir el Producto, si éste no ha sido vinculado con una <code>Orden</code>. Para eliminarlo, debe indicar el <code>id</code> del Producto a borrar. La solicitud devuelve un objeto con un parámetro <code>success=true</code> en caso de éxito. De lo contrario, esta llamada devuelve un error ( <code>success=false</code> ) . Para mas información vease los ejemplos a continuación.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>El <code>id</code> del Producto que se va a borrar.</p>"          }        ]      }    },    "name": "BorraProducto",    "filename": "source_doc/documentation.js",    "groupTitle": "Producto",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>true</code> en caso de exito</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>mensaje descriptivo de la informacion devuelta desde el servidor</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\": true,\n  \"message\": \"El registro se eliminó exitosamente.\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "success:false",            "description": "<p>ocurrio un error la ejecucion de la solicitud de borrado</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>mensaje descriptivo del error devuelto desde el servidor</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"success\": false,\n  \"message\": \"Ocurrio un error al intentar borrar\"\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/product/",    "title": "Crear",    "version": "1.0.0",    "name": "CreateProducto",    "group": "Producto",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/product/",        "type": "put"      }    ],    "description": "<p>Crea un nuevo objeto Producto. Las columnas guardar son <code>department_id, name, description, reference, price, photo</code>. La solicitud retorna un JSON con la informacion con <code>status 200</code> en caso de tener exito, de lo contrario devuelve <code>status 400</code>. Para mas informacion vease los ejemplos a continuación.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "department_id",            "description": "<p>el valor <code>id</code> del Departamento al cual pertenece el Producto.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Nombre del Producto que se va a mostrar al usuario.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": "<p>La descripción del Producto que se va a mostrar al usuario.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "reference",            "description": "<p>Referencia del Producto.</p>"          },          {            "group": "Parameter",            "type": "Decimal",            "optional": true,            "field": "price",            "description": "<p>Precio de venta del Producto para mostrar. Ej. $57.99</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "photo",            "description": "<p>En esta columna se almacena el path de ubicación de la imagen a mostrar del producto.</p>"          }        ]      }    },    "filename": "source_doc/documentation.js",    "groupTitle": "Producto",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>true</code> si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>Descripción del mensaje devuelto desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato <code>json</code>, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"message\" : \"El registro se guardó exitosamente.\",\n  \"result\"  : [\n         {\n             \"id\" : 135e656e6cda8640820350816ab59f2d,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/product/:id",    "title": "Editar",    "version": "1.0.0",    "name": "EditProducto",    "group": "Producto",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/product/135e656e6cda8640820350816ab59f2d",        "type": "put"      }    ],    "description": "<p>Actualiza los detalles del Producto específico, mediante el identificación de los valores de los parámetros pasados. Cualquiera de los parámetros no previstos serán dejados sin cambios. Las columnas a actualizar son <code>department_id, name, description, reference, price, photo</code>. Tenga en cuenta que el atributo <code>id</code> no es editable. La solicitud retorna un JSON con la informacion con <code>status 200</code> en caso de tener exito, de lo contrario devuelve <code>status 400</code>. Para mas información vease los ejemplos a continuación.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "department_id",            "description": "<p>el valor <code>id</code> del Departamento al cual pertenece el Producto.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Nombre del Producto que se va a mostrar al usuario.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": "<p>La descripción del Producto que se va a mostrar al usuario.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "reference",            "description": "<p>Referencia del Producto.</p>"          },          {            "group": "Parameter",            "type": "Decimal",            "optional": true,            "field": "price",            "description": "<p>Precio de venta del Producto para mostrar. Ej. $57.99</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "photo",            "description": "<p>En esta columna se almacena el path de ubicación de la imagen a mostrar del producto.</p>"          }        ]      }    },    "filename": "source_doc/documentation.js",    "groupTitle": "Producto",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>true</code> si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>Descripción del mensaje devuelto desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato <code>json</code>, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"message\" : \"El registro se guardó exitosamente.\",\n  \"result\"  : [\n         {\n             \"id\" : 135e656e6cda8640820350816ab59f2d,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "success:false",            "description": "<p>ocurrio un error la ejecucion de la solicitud de edición</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>mensaje descriptivo del error devuelto desde el servidor</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"success\": false,\n  \"message\": \"No se encontro el id X\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/product/",    "title": "Listar",    "version": "1.0.0",    "name": "GetAll",    "group": "Producto",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/product/",        "type": "put"      }    ],    "description": "<p>Devuelve una lista de todos los Productos. Las Productos se devuelven ordenados por fecha de creación, los Productos más recientemente creados aparecen en primer lugar. Las columnas disponibles a mostrar son <code>id, department_id, name, description, reference, price, photo</code></p>",    "filename": "source_doc/documentation.js",    "groupTitle": "Producto",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve true si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato json, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"result\"  : [\n         {\n             \"id\" : 1,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/product/:id",    "title": "Leer",    "description": "<p>Recupera los detalles de un Producto existente. Suministrar el <code>id</code> del Producto para devolver la información de la Producto correspondiente. La respuesta devuelve un conjunto de variables, la variable <code>result</code> contiene JSON con las siguientes columnas: <code>id, department_id, name, description, reference, price, photo</code>.</p>",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>El <code>id</code> del Producto que se está leyendo.</p>"          }        ]      }    },    "name": "GetProducto",    "group": "Producto",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/product/135e656e6cda8640820350816ab59f2d",        "type": "put"      }    ],    "filename": "source_doc/documentation.js",    "groupTitle": "Producto",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve true si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato json, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"result\"  : [\n         {\n             \"id\" : 1,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/usertype/:id",    "title": "Borrar",    "version": "1.0.0",    "group": "Tipos_de_Usuario",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "http://toolvendor-beecode.rhcloud.com/rest/usertype/5",        "type": "delete"      }    ],    "description": "<p>Permite borrar un UserType. Solo es posible suprimir el tipo de usuario, si éste no ha sido vinculado con un <code>Usuario</code>. Para eliminarlo, debe indicar el <code>id</code> del UserType a borrar. La petición retorna un objeto con un parámetro <code>success=true</code> en caso de éxito. De lo contrario retorna ( <code>success=false</code> ) . Para mas información vease los ejemplos a continuación.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "id",            "description": "<p>El <code>id</code> del Tipo de Usuario que se va a borrar.</p>"          }        ]      }    },    "name": "BorraUserType",    "filename": "source_doc/documentation.js",    "groupTitle": "Tipos_de_Usuario",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>true</code> en caso de exito</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>mensaje descriptivo de la informacion devuelta desde el servidor</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\": true,\n  \"message\": \"El registro se eliminó exitosamente.\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "success:false",            "description": "<p>ocurrio un error la ejecucion de la solicitud de borrado</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>mensaje descriptivo del error devuelto desde el servidor</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"success\": false,\n  \"message\": \"Ocurrio un error al intentar borrar\"\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/usertype/",    "title": "Crear",    "version": "1.0.0",    "name": "CreateUserType",    "group": "Tipos_de_Usuario",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "http://toolvendor-beecode.rhcloud.com/rest/usertype",        "type": "post"      }    ],    "description": "<p>Crea un nuevo objeto UserType. Las columnas guardar son <code>description, type, companyId</code>. La solicitud retorna un JSON con la informacion con <code>status 200</code> en caso de tener exito, de lo contrario devuelve <code>status 400</code>. Para mas informacion vease los ejemplos a continuación.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "companyId",            "description": "<p>ID de la compañia del usuario.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": "<p>La descripción del tipo de usuario.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "type",            "description": "<p>El tipo de usuario reconocido por el sistema. 'A' = ADMIN, 'M' = Movil</p>"          }        ]      }    },    "filename": "source_doc/documentation.js",    "groupTitle": "Tipos_de_Usuario",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>true</code> si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>Descripción del mensaje devuelto desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato <code>json</code>, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"message\" : \"El registro se guardó exitosamente.\",\n  \"result\"  : [\n         {\n             \"id\" : 135e656e6cda8640820350816ab59f2d,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/usertype/:id",    "title": "Editar",    "version": "1.0.0",    "name": "EditDepartamento",    "group": "Tipos_de_Usuario",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "http://toolvendor-beecode.rhcloud.com/rest/usertype/5",        "type": "put"      }    ],    "description": "<p>Actualiza los detalles del UserType específico, mediante el identificación de los valores de los parámetros pasados. Cualquiera de los parámetros no previstos serán dejados sin cambios. Las columnas a actualizar son <code>description, type, companyId</code>. Tenga en cuenta que el atributo <code>id</code> no es editable. La solicitud retorna un JSON con la informacion con <code>status 200</code> en caso de tener exito, de lo contrario devuelve <code>status 400</code>. Para mas información vease los ejemplos a continuación.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "id",            "description": "<p>El valor <code>id</code> del UserType.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "companyId",            "description": "<p>ID de la compañia del usuario.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>La descripción del tipo de usuario.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "type",            "description": "<p>El tipo de usuario reconocido por el sistema. 'A' = ADMIN, 'M' = Movil</p>"          }        ]      }    },    "filename": "source_doc/documentation.js",    "groupTitle": "Tipos_de_Usuario",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>true</code> si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>Descripción del mensaje devuelto desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato <code>json</code>, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"message\" : \"El registro se guardó exitosamente.\",\n  \"result\"  : [\n         {\n             \"id\" : 135e656e6cda8640820350816ab59f2d,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "success:false",            "description": "<p>ocurrio un error la ejecucion de la solicitud de edición</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>mensaje descriptivo del error devuelto desde el servidor</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"success\": false,\n  \"message\": \"No se encontro el id X\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/usertype/",    "title": "Listar",    "version": "1.0.0",    "name": "GetAll",    "group": "Tipos_de_Usuario",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "http://toolvendor-beecode.rhcloud.com/rest/usertype/",        "type": "get"      }    ],    "description": "<p>Devuelve una lista de todos los Departamentos. Las Departamentos se devuelven ordenados por fecha de creación, los Departamentos más recientemente creados aparecen en primer lugar. Las columnas disponibles a mostrar son <code>id, name, phone, fax, address, lat, lng, photo, website</code></p>",    "filename": "source_doc/documentation.js",    "groupTitle": "Tipos_de_Usuario",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve true si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato json, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"result\"  : [\n         {\n             \"id\" : 1,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/usertype/:id",    "title": "Leer",    "description": "<p>Retorna los datos de un UserType existente. Suministrar el <code>id</code> del UserType para recuperar los datos correspondientes. La respuesta devuelve un conjunto de variables, la variable <code>result</code> contiene JSON con las siguientes columnas: <code>description, type, companyId</code>.</p>",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>El <code>id</code> del Departamento que se está leyendo.</p>"          }        ]      }    },    "name": "GetUserType",    "group": "Tipos_de_Usuario",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "http://toolvendor-beecode.rhcloud.com/rest/usertype/5",        "type": "get"      }    ],    "filename": "source_doc/documentation.js",    "groupTitle": "Tipos_de_Usuario",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve true si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato json, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"result\"  : [\n         {\n             \"id\" : 1,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/user/:id",    "title": "Borrar",    "version": "1.0.0",    "group": "Usuarios",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "http://toolvendor-beecode.rhcloud.com/rest/user/5",        "type": "delete"      }    ],    "description": "<p>Este método borra un usuario de la compañia. Solo es posible suprimir el usuario, si ésta no ha sido vinculado a una Visita o una Orden. Para eliminarlo, debe indicar el <code>id</code> del Usuario a borrar. La solicitud devuelve un objeto con un parámetro <code>success=true</code> en caso de éxito. De lo contrario, esta llamada devuelve un error ( <code>success=false</code> ) . Para mas información vease los ejemplos a continuación.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "Access-Token",            "description": "<p>El método requiere Token en el Header de la petición</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>El <code>ID</code> de la Categoria a borrar.</p>"          }        ]      }    },    "name": "BorraUsuario",    "filename": "source_doc/documentation.js",    "groupTitle": "Usuarios",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>true</code> en caso de exito</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>mensaje descriptivo de la informacion devuelta desde el servidor</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\": true,\n  \"message\": \"El registro se eliminó exitosamente.\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "success:false",            "description": "<p>ocurrio un error la ejecucion de la solicitud de borrado</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>mensaje descriptivo del error devuelto desde el servidor</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"success\": false,\n  \"message\": \"Ocurrio un error al intentar borrar\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/user/:id/calls",    "title": "Llamadas",    "version": "1.0.0",    "name": "CallsByUser",    "group": "Usuarios",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "http://toolvendor-beecode.rhcloud.com/rest/user/1/calls",        "type": "get"      }    ],    "description": "<p>Devuelve una lista de todas las llamadas del usuario. las llamadas de los usuarios estan ordenadas de forma descendiente. Las columnas disponibles a mostrar son <code>id, userId, name, phone </code></p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "Access-Token",            "description": "<p>El método requiere Token en el Header de la petición</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>El <code>ID</code> del usuario.</p>"          }        ]      }    },    "filename": "source_doc/documentation.js",    "groupTitle": "Usuarios",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve true si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato json, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"result\"  : [\n         {\n             \"id\" : 1,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/user/:id/contact",    "title": "Contactos",    "version": "1.0.0",    "name": "ContactByUser",    "group": "Usuarios",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "http://toolvendor-beecode.rhcloud.com/rest/user/1/contact",        "type": "get"      }    ],    "description": "<p>Devuelve una lista de todas los contactos del usuario. los contactos están ordenados por el mismo orden en que estan guardados en el celular. Las columnas disponibles a mostrar son <code>id, userId, name, phone, phone2, email</code></p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "Access-Token",            "description": "<p>El método requiere Token en el Header de la petición</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>El <code>ID</code> del usuario.</p>"          }        ]      }    },    "filename": "source_doc/documentation.js",    "groupTitle": "Usuarios",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve true si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato json, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"result\"  : [\n         {\n             \"id\" : 1,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/user",    "title": "Crear",    "version": "1.0.0",    "name": "CreateUsuario",    "group": "Usuarios",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "http://toolvendor-beecode.rhcloud.com/rest/user",        "type": "post"      }    ],    "description": "<p>Crea un nuevo objeto User. Las columnas guardar son <code> email, enabled, latitud, longitude, name, phone, photo, usertype, companyId, city, country</code>. La solicitud retorna un JSON con la informacion con <code>status 200</code> en caso de tener exito, de lo contrario devuelve <code>status 400</code>. Para mas informacion vease los ejemplos a continuación.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "Access-Token",            "description": "<p>El método requiere Token en el Header de la petición</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "companyId",            "description": "<p>Id de la compañia del usuario</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>El email del usuario.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "enabled",            "description": "<p>El estatus del usuario si esta activo o inactivo para usar la plataforma.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "latitud",            "description": "<p>Numero de Latitud de geolocalización GPS del usuario</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "longitude",            "description": "<p>Numero de Longitude de geolocalización GPS del usuario</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Nombre del usuario</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "phone",            "description": "<p>Numero de telefono del usuario</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "photo",            "description": "<p>URL de la fotogradía del usuario</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "usertype",            "description": "<p>Objeto[UserType] que indica el tipo de usuario.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "city",            "description": "<p>Objeto[City] que indica la ciudad y pais del usuario.</p>"          }        ]      }    },    "filename": "source_doc/documentation.js",    "groupTitle": "Usuarios",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>true</code> si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>Descripción del mensaje devuelto desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato <code>json</code>, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"message\" : \"El registro se guardó exitosamente.\",\n  \"result\"  : [\n         {\n             \"id\" : 135e656e6cda8640820350816ab59f2d,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/user/:id/customer",    "title": "Clientes por Usuario",    "version": "1.0.0",    "name": "CustomerByUser",    "group": "Usuarios",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "http://toolvendor-beecode.rhcloud.com/rest/user/1/customer",        "type": "get"      }    ],    "description": "<p>Devuelve una lista de todos los clientes del usuario. los clientes del usuario estan ordenados de forma alfabetica. Las columnas disponibles a mostrar son <code>id, createdAt, companyName, contactName, contactPhone, contactEmail, building, street, postalCode, reference, latitud, longitud, userId, name, phone, companyId, city, country </code></p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "Access-Token",            "description": "<p>El método requiere Token en el Header de la petición</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>El <code>ID</code> del usuario.</p>"          }        ]      }    },    "filename": "source_doc/documentation.js",    "groupTitle": "Usuarios",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve true si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato json, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"result\"  : [\n         {\n             \"id\" : 1,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/user/:id",    "title": "Editar",    "version": "1.0.0",    "name": "EditUsuario",    "group": "Usuarios",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "http://toolvendor-beecode.rhcloud.com/rest/user/5",        "type": "put"      }    ],    "description": "<p>Este método actualiza los datos de un Usuario, requiere crear un objeto JSON con los parametros a anexar en la petición. Cualquiera de los parámetros no previstos serán dejados sin cambios. Las columnas a actualizar son <code>id, createdAt, email, enabled, latitud, longitude, name, phone, photo, usertype, companyId, city, country</code>. Tenga en cuenta que el atributo <code>id, companyId</code> no es editable. La solicitud retorna un JSON con la informacion con <code>status 200</code> en caso de tener exito, de lo contrario retorna <code>status 400</code>. Para mas informacion vease los ejemplos a continuación.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "Access-Token",            "description": "<p>El método requiere Token en el Header de la petición</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>Numero entero (unique ID - PrimaryKey) para actualizar en el modelo.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "companyId",            "description": "<p>Id de la compañia del usuario</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "email",            "description": "<p>El email del usuario.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "enabled",            "description": "<p>El estatus del usuario si esta activo o inactivo para usar la plataforma.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "latitud",            "description": "<p>Numero de Latitud de geolocalización GPS del usuario</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "longitude",            "description": "<p>Numero de Longitude de geolocalización GPS del usuario</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "name",            "description": "<p>Nombre del usuario</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "phone",            "description": "<p>Numero de telefono del usuario</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "photo",            "description": "<p>URL de la fotogradía del usuario</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "usertype",            "description": "<p>Objeto[UserType] que indica el tipo de usuario</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "city",            "description": "<p>Objeto[City] que indica la ciudad y pais del usuario</p>"          }        ]      }    },    "filename": "source_doc/documentation.js",    "groupTitle": "Usuarios",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>true</code> si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>Descripción del mensaje devuelto desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato <code>json</code>, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"message\" : \"El registro se guardó exitosamente.\",\n  \"result\"  : [\n         {\n             \"id\" : 135e656e6cda8640820350816ab59f2d,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "success:false",            "description": "<p>ocurrio un error la ejecucion de la solicitud de edición</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>mensaje descriptivo del error devuelto desde el servidor</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"success\": false,\n  \"message\": \"No se encontro el id X\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/user",    "title": "Listar",    "version": "1.0.0",    "name": "GetAll",    "group": "Usuarios",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "http://toolvendor-beecode.rhcloud.com/rest/user",        "type": "get"      }    ],    "description": "<p>Devuelve una lista de todas los Usuarios. El método retirna un listado de Usuarios pertenecientes a la Compañia, las Categorias más recientemente creadas aparecen en primer lugar. Las columnas disponibles a mostrar son <code>id, createdAt, email, enabled, latitud, longitude, name, phone, photo, usertype, companyId, city, country</code></p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "Access-Token",            "description": "<p>El método requiere Token en el Header de la petición</p>"          }        ]      }    },    "filename": "source_doc/documentation.js",    "groupTitle": "Usuarios",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve true si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato json, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"result\"  : [\n         {\n             \"id\" : 1,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/user/:id",    "title": "Leer",    "description": "<p>Recupera los detalles de un Usuario existente. Suministrar el <code>id</code> del Usuario para devolver la información correspondiente. La respuesta devuelve un conjunto de variables, la variable <code>result</code> contiene JSON con las siguientes columnas: <code>id, createdAt, email, enabled, latitud, longitude, name, phone, photo, usertype, companyId, city, country</code>.</p>",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "Access-Token",            "description": "<p>El método requiere Token en el Header de la petición</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>un numero entero (unique ID - PrimaryKey) para leer en la tabla</p>"          }        ]      }    },    "name": "GetUser",    "group": "Usuarios",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "http://toolvendor-beecode.rhcloud.com/rest/user/5",        "type": "get"      }    ],    "filename": "source_doc/documentation.js",    "groupTitle": "Usuarios",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve true si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato json, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"result\"  : [\n         {\n             \"id\" : 1,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/user/:id/visit",    "title": "Vistas por Usuario",    "version": "1.0.0",    "group": "Usuarios",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "http://toolvendor-beecode.rhcloud.com/rest/user/1/visit",        "type": "get"      }    ],    "description": "<p>Devuelve una lista de todas las visitas del usuario. las visitas del usuario estan ordenados de forma descendente. Las columnas disponibles a mostrar son <code>id, userId, customer, companyId, visitType, createdAt, scheduledDate, checkin, checkout, firm, comment, reason </code></p>",    "name": "VisitByUser",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "Access-Token",            "description": "<p>El método requiere Token en el Header de la petición</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>El <code>ID</code> del usuario.</p>"          }        ]      }    },    "filename": "source_doc/documentation.js",    "groupTitle": "Usuarios",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve true si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato json, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"result\"  : [\n         {\n             \"id\" : 1,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  }] });

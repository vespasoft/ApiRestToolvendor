[  {    "type": "delete",    "url": "/category/:id",    "title": "Borrar",    "version": "1.0.0",    "group": "Categoria",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/category/135e656e6cda8640820350816ab59f2d",        "type": "delete"      }    ],    "description": "<p>Permite borrar una Categoria. Solo es posible suprimir la Categoria, si ésta no ha sido vinculada a un Establecimiento. Para eliminarla, debe indicar el <code>id</code> de la Categoria a borrar. La solicitud devuelve un objeto con un parámetro <code>success=true</code> en caso de éxito. De lo contrario, esta llamada devuelve un error ( <code>success=false</code> ) . Para mas información vease los ejemplos a continuación.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>El <code>ID</code> de la Categoria a borrar.</p>"          }        ]      }    },    "name": "BorraCategoria",    "filename": "source_doc/documentation.js",    "groupTitle": "Categoria",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>true</code> en caso de exito</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>mensaje descriptivo de la informacion devuelta desde el servidor</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\": true,\n  \"message\": \"Registro Borrado\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "success:false",            "description": "<p>ocurrio un error la ejecucion de la solicitud de borrado</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>mensaje descriptivo del error devuelto desde el servidor</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"success\": false,\n  \"message\": \"Ocurrio un error al intentar borrar\",\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/category/",    "title": "Crear",    "version": "1.0.0",    "name": "CreateCategoria",    "group": "Categoria",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/category/",        "type": "put"      }    ],    "description": "<p>Crea un nuevo objeto Categoria. Las columnas guardar son <code>name, description, photo</code>. La solicitud retorna un JSON con la informacion con <code>status 200</code> en caso de tener exito, de lo contrario devuelve <code>status 400</code>. Para mas informacion vease los ejemplos a continuación.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Nombre de la Categoria que se va a mostrar al usuario.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": "<p>La descripción de la Categoria que se va a mostrar al usuario.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "photo",            "description": "<p>En esta columna se almacena el path de ubicación de la imagen a mostrar de la categoria.</p>"          }        ]      }    },    "filename": "source_doc/documentation.js",    "groupTitle": "Categoria",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>true</code> si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>Descripción del mensaje devuelto desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato <code>json</code>, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"message\" : \"la solicitud se realizo con exito\",\n  \"result\"  : [\n         {\n             \"id\" : 135e656e6cda8640820350816ab59f2d,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/category/:id",    "title": "Editar",    "version": "1.0.0",    "name": "EditCategoria",    "group": "Categoria",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/category/135e656e6cda8640820350816ab59f2d",        "type": "put"      }    ],    "description": "<p>Actualiza los detalles de la Categoria específica, mediante el establecimiento de los valores de los parámetros pasados. Cualquiera de los parámetros no previstos serán dejados sin cambios. Las columnas a actualizar son <code>name, description, photo</code>. Tenga en cuenta que el atributo <code>id</code> no es editable. La solicitud retorna un JSON con la informacion con <code>status 200</code> en caso de tener exito, de lo contrario devuelve <code>status 400</code>. Para mas informacion vease los ejemplos a continuación.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>un numero entero (unique ID - PrimaryKey) para actualizar en el modelo.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Nombre de la Categoria que se va a mostrar al usuario.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": "<p>La descripción de la Categoria que se va a mostrar al usuario.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "photo",            "description": "<p>En esta columna se almacena el path de ubicación de la imagen a mostrar de la categoria.</p>"          }        ]      }    },    "filename": "source_doc/documentation.js",    "groupTitle": "Categoria",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>true</code> si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>Descripción del mensaje devuelto desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato <code>json</code>, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"message\" : \"la solicitud se realizo con exito\",\n  \"result\"  : [\n         {\n             \"id\" : 135e656e6cda8640820350816ab59f2d,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "success:false",            "description": "<p>ocurrio un error la ejecucion de la solicitud de borrado</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>mensaje descriptivo del error devuelto desde el servidor</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"success\": false,\n  \"message\": \"No se encontro el id X\",\n  \"result\": null\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/category/",    "title": "Listar",    "version": "1.0.0",    "name": "GetAll",    "group": "Categoria",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/category/",        "type": "put"      }    ],    "description": "<p>Devuelve una lista de todas las Categorias. Las Categorias se devuelven ordenadas por fecha de creación, las Categorias más recientemente creadas aparecen en primer lugar. Las columnas disponibles a mostrar son <code>id, name, description, photo</code></p>",    "filename": "source_doc/documentation.js",    "groupTitle": "Categoria",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve true si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "Integer",            "optional": false,            "field": "total",            "description": "<p>cantidad de registros devueltos.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>mensaje descriptivo de la informacion devuelta desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato json, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"total\"   : 5,\n  \"message\" : \"\",\n  \"result\"  : [\n         {\n             \"id\" : 135e656e6cda8640820350816ab59f2d,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/category/:id",    "title": "Leer",    "description": "<p>Recupera los detalles de una Categoria existente. Suministrar el <code>id</code> de Categoria para devolver la información de la Categoria correspondiente. La respuesta devuelve un conjunto de variables, la variable <code>result</code> contiene JSON con las siguientes columnas: <code>id, name, description, photo</code> y una coleccion de Establecimientos (<code>stores</code>).</p>",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>un numero entero (unique ID - PrimaryKey) para leer en la tabla</p>"          }        ]      }    },    "name": "GetCategoria",    "group": "Categoria",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/category/135e656e6cda8640820350816ab59f2d",        "type": "put"      }    ],    "filename": "source_doc/documentation.js",    "groupTitle": "Categoria",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve true si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "Integer",            "optional": false,            "field": "total",            "description": "<p>cantidad de registros devueltos.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>mensaje descriptivo de la informacion devuelta desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato json, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"total\"   : 5,\n  \"message\" : \"\",\n  \"result\"  : [\n         {\n             \"id\" : 135e656e6cda8640820350816ab59f2d,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/customer/:id",    "title": "Borrar",    "version": "1.0.0",    "group": "Cliente",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/product/135e656e6cda8640820350816ab59f2d",        "type": "delete"      }    ],    "description": "<p>Permite borrar un Cliente. Solo es posible suprimir el Cliente, si éste no ha sido vinculado con una <code>Orden</code>. Para eliminarlo, debe indicar el <code>id</code> del Cliente a borrar. La solicitud devuelve un objeto con un parámetro <code>success=true</code> en caso de éxito. De lo contrario, esta llamada devuelve un error ( <code>success=false</code> ) . Para mas información vease los ejemplos a continuación.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>El <code>id</code> del Cliente que se va a borrar.</p>"          }        ]      }    },    "name": "BorraCliente",    "filename": "source_doc/documentation.js",    "groupTitle": "Cliente",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>true</code> en caso de exito</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>mensaje descriptivo de la informacion devuelta desde el servidor</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\": true,\n  \"message\": \"Registro Borrado\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "success:false",            "description": "<p>ocurrio un error la ejecucion de la solicitud de borrado</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>mensaje descriptivo del error devuelto desde el servidor</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"success\": false,\n  \"message\": \"Ocurrio un error al intentar borrar\",\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/customer/",    "title": "Crear",    "version": "1.0.0",    "name": "CreateCliente",    "group": "Cliente",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/customer/",        "type": "put"      }    ],    "description": "<p>Crea un nuevo objeto Cliente. Las columnas guardar son <code>first_name, last_name, email, password, photo, phone, security_question, answer</code>. La solicitud retorna un JSON con la informacion con <code>status 200</code> en caso de tener exito, de lo contrario devuelve <code>status 400</code>. Para mas información vease los ejemplos a continuación.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "first_name",            "description": "<p>Nombre completo del  Cliente.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "last_name",            "description": "<p>Apellidos del Cliente.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Direccion de correo electronico, ademas se usa como login de acceso.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>Clave de acceso a la aplicacion.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "photo",            "description": "<p>En esta columna se almacena el path de ubicación de la imagen de perfil del cliente.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "phone",            "description": "<p>Numero telefonico de contacto al cliente.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "security_question",            "description": "<p>Pregunta de seguridad para recuperar clave de usuario.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "answer",            "description": "<p>Respuesta a la pregunta de seguridad para recuperar clave de usuario.</p>"          }        ]      }    },    "filename": "source_doc/documentation.js",    "groupTitle": "Cliente",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>true</code> si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>Descripción del mensaje devuelto desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato <code>json</code>, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"message\" : \"la solicitud se realizo con exito\",\n  \"result\"  : [\n         {\n             \"id\" : 135e656e6cda8640820350816ab59f2d,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/customer/:id",    "title": "Editar",    "version": "1.0.0",    "name": "EditCliente",    "group": "Cliente",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/customer/135e656e6cda8640820350816ab59f2d",        "type": "put"      }    ],    "description": "<p>Actualiza los detalles del Cliente específico, mediante la identificación de los valores de los parámetros suministrados. Cualquiera de los parámetros no previstos serán dejados sin cambios. Las columnas a actualizar son<br> <code>first_name, last_name, email, password, photo, phone, security_question, answer</code>.<br> Tenga en cuenta que el atributo <code>id</code> no es editable. La solicitud retorna un JSON con la informacion con <code>status 200</code> en caso de tener exito, de lo contrario devuelve <code>status 400</code>. Para mas información vease los ejemplos a continuación.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "first_name",            "description": "<p>Nombre completo del  Cliente.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "last_name",            "description": "<p>Apellidos del Cliente.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Direccion de correo electronico, ademas se usa como login de acceso.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>Clave de acceso a la aplicacion.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "photo",            "description": "<p>En esta columna se almacena el path de ubicación de la imagen de perfil del cliente.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "phone",            "description": "<p>Numero telefonico de contacto al cliente.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "security_question",            "description": "<p>Pregunta de seguridad para recuperar clave de usuario.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "answer",            "description": "<p>Respuesta a la pregunta de seguridad para recuperar clave de usuario.</p>"          }        ]      }    },    "filename": "source_doc/documentation.js",    "groupTitle": "Cliente",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>true</code> si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>Descripción del mensaje devuelto desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato <code>json</code>, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"message\" : \"la solicitud se realizo con exito\",\n  \"result\"  : [\n         {\n             \"id\" : 135e656e6cda8640820350816ab59f2d,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "success:false",            "description": "<p>ocurrio un error la ejecucion de la solicitud de borrado</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>mensaje descriptivo del error devuelto desde el servidor</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"success\": false,\n  \"message\": \"No se encontro el id X\",\n  \"result\": null\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/customer/",    "title": "Listar",    "version": "1.0.0",    "name": "GetAll",    "group": "Cliente",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/customer/",        "type": "put"      }    ],    "description": "<p>Devuelve una lista de todos los Clientes. Los Clientes se devuelven ordenados por fecha de creación, los Clientes más recientemente creados aparecen en primer lugar. Las columnas disponibles a mostrar son <code>id, first_name, last_name, email, photo, phone, security_question, answer</code></p>",    "filename": "source_doc/documentation.js",    "groupTitle": "Cliente",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve true si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "Integer",            "optional": false,            "field": "total",            "description": "<p>cantidad de registros devueltos.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>mensaje descriptivo de la informacion devuelta desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato json, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"total\"   : 5,\n  \"message\" : \"\",\n  \"result\"  : [\n         {\n             \"id\" : 135e656e6cda8640820350816ab59f2d,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/customer/:id",    "title": "Leer",    "description": "<p>Recupera los detalles de un Cliente existente. Suministrar el <code>id</code> del Cliente para devolver la información del Cliente correspondiente. La respuesta devuelve un conjunto de variables, la variable <code>result</code> contiene JSON con las siguientes columnas: <br> <code>id, first_name, last_name, email, password, photo, phone, security_question, answer</code>. <br>Tambien devuelve un array de las tarjetas (<code>cards</code>) y direcciones de entrega (<code>address</code>) asociadas al cliente.</p>",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>El <code>id</code> del Cliente que se está leyendo.</p>"          }        ]      }    },    "name": "GetCliente",    "group": "Cliente",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/customer/135e656e6cda8640820350816ab59f2d",        "type": "put"      }    ],    "filename": "source_doc/documentation.js",    "groupTitle": "Cliente",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve true si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "Integer",            "optional": false,            "field": "total",            "description": "<p>cantidad de registros devueltos.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>mensaje descriptivo de la informacion devuelta desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato json, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"total\"   : 5,\n  \"message\" : \"\",\n  \"result\"  : [\n         {\n             \"id\" : 135e656e6cda8640820350816ab59f2d,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/customer/login/",    "title": "Login",    "version": "1.0.0",    "name": "LoginCliente",    "group": "Cliente",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/customer/login",        "type": "post"      }    ],    "description": "<p>Valida los datos suministrados para el inicio de sesion (<code>email</code> y <code>password</code>). La solicitud retorna un JSON con la informacion con <code>status 200</code> en caso de tener exito, de lo contrario devuelve <code>status 400</code>. Para mas información vease los ejemplos a continuación.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Direccion de correo electronico del cliente usada como usuario de acceso a la app.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>Clave de acceso del cliente usada para iniciar sesion en la app.</p>"          }        ]      }    },    "filename": "source_doc/documentation.js",    "groupTitle": "Cliente",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>true</code> si los datos fueron validados y autorizados por el servidor.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>Descripción del mensaje devuelto desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato <code>json</code>, de la entidad autorizada.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n      \"success\": true,\n      \"message\": \"Bienvenido al sistema toolvendor\",\n      \"tokenId\": \"eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiIxIiwiaWF0IjoxNDg1ODY2OTQ3LCJzdWIiOiIxIiwiaXNzIjoiTHVpcyBNYW51ZWwgVmVzcGEifQ.4MM6CZxv1NVCDo5Fugqs-h3ERcQWhMCuH8stTcETglM\",\n      \"result\": {\n             \"id\": 1,\n             \"createdAt\": 1483594440000,\n             \"email\": \"vespaluis@gmail.com\",\n             \"enabled\": true,\n             \"lastUpdate\": null,\n             \"latitud\": null,\n             \"longitude\": null,\n             \"name\": \"Luis Manuel Vespa\",\n             \"password\": \"vt1cowt0\",\n             \"phone\": \"+50760846611\",\n             \"photo\": \"user.png\",\n             \"usertype\": {\n               \"id\": 1,\n               \"description\": \"SUPER ADMIN\",\n               \"type\": \"A\",\n               \"companyId\": 1\n             },\n             \"companyId\": 1,\n             \"city\": {\n               \"id\": 1,\n               \"country\": {\n                 \"id\": 1,\n                 \"name\": \"Panama\",\n                 \"alpha2\": \"PA\",\n                 \"alpha3\": \"PAN\",\n                 \"number\": null\n               },\n               \"city\": \"Ciudad Panama\"\n             },\n             \"country\": {\n               \"id\": 1,\n               \"name\": \"Panama\",\n               \"alpha2\": \"PA\",\n               \"alpha3\": \"PAN\",\n               \"number\": null\n             }\n      }\n  }",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>false</code> si los datos NO fueron autorizados por el servidor para iniciar sesion.</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>Descripción del mensaje devuelto desde el servidor.</p>"          },          {            "group": "Error 4xx",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>devuelve <code>null</code>, debido a que los parametros suministrados no fue validados por el servidor.</p>"          }        ]      },      "examples": [        {          "title": "HTTP/1.1 401 Unauthorized",          "content": " HTTP/1.1 401 Unauthorized\n{\n     \"success\": false,\n     \"message\": \"The username or password is invalid.\"\n }",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/department/:id",    "title": "Borrar",    "version": "1.0.0",    "group": "Departamento",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/department/135e656e6cda8640820350816ab59f2d",        "type": "delete"      }    ],    "description": "<p>Permite borrar un Departamento. Solo es posible suprimir el Departamento, si éste no ha sido vinculado con un <code>Producto</code>. Para eliminarlo, debe indicar el <code>id</code> del Departamento a borrar. La solicitud devuelve un objeto con un parámetro <code>success=true</code> en caso de éxito. De lo contrario, esta llamada devuelve un error ( <code>success=false</code> ) . Para mas información vease los ejemplos a continuación.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>El <code>id</code> del Departamento que se va a borrar.</p>"          }        ]      }    },    "name": "BorraDepartamento",    "filename": "source_doc/documentation.js",    "groupTitle": "Departamento",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>true</code> en caso de exito</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>mensaje descriptivo de la informacion devuelta desde el servidor</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\": true,\n  \"message\": \"Registro Borrado\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "success:false",            "description": "<p>ocurrio un error la ejecucion de la solicitud de borrado</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>mensaje descriptivo del error devuelto desde el servidor</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"success\": false,\n  \"message\": \"Ocurrio un error al intentar borrar\",\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/department/",    "title": "Crear",    "version": "1.0.0",    "name": "CreateDepartamento",    "group": "Departamento",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/department/",        "type": "put"      }    ],    "description": "<p>Crea un nuevo objeto Departamento. Las columnas guardar son <code>store_id, name, description, photo</code>. La solicitud retorna un JSON con la informacion con <code>status 200</code> en caso de tener exito, de lo contrario devuelve <code>status 400</code>. Para mas informacion vease los ejemplos a continuación.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "store_id",            "description": "<p>el valor <code>id</code> del Establecimiento al cual pertenece el Departamento.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Nombre de la Departamento que se va a mostrar al usuario.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": "<p>La descripción del Departamento que se va a mostrar al usuario.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "photo",            "description": "<p>En esta columna se almacena el path de ubicación de la imagen a mostrar del departamento.</p>"          }        ]      }    },    "filename": "source_doc/documentation.js",    "groupTitle": "Departamento",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>true</code> si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>Descripción del mensaje devuelto desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato <code>json</code>, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"message\" : \"la solicitud se realizo con exito\",\n  \"result\"  : [\n         {\n             \"id\" : 135e656e6cda8640820350816ab59f2d,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/department/:id",    "title": "Editar",    "version": "1.0.0",    "name": "EditDepartamento",    "group": "Departamento",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/department/135e656e6cda8640820350816ab59f2d",        "type": "put"      }    ],    "description": "<p>Actualiza los detalles del Departamento específico, mediante el identificación de los valores de los parámetros pasados. Cualquiera de los parámetros no previstos serán dejados sin cambios. Las columnas a actualizar son <code>store_id, name, description, photo</code>. Tenga en cuenta que el atributo <code>id</code> no es editable. La solicitud retorna un JSON con la informacion con <code>status 200</code> en caso de tener exito, de lo contrario devuelve <code>status 400</code>. Para mas información vease los ejemplos a continuación.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "store_id",            "description": "<p>el valor <code>id</code> del Establecimiento al cual pertenece el Departamento.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Nombre de la Departamento que se va a mostrar al usuario.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": "<p>La descripción del Departamento que se va a mostrar al usuario.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "photo",            "description": "<p>En esta columna se almacena el path de ubicación de la imagen a mostrar del departamento.</p>"          }        ]      }    },    "filename": "source_doc/documentation.js",    "groupTitle": "Departamento",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>true</code> si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>Descripción del mensaje devuelto desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato <code>json</code>, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"message\" : \"la solicitud se realizo con exito\",\n  \"result\"  : [\n         {\n             \"id\" : 135e656e6cda8640820350816ab59f2d,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "success:false",            "description": "<p>ocurrio un error la ejecucion de la solicitud de borrado</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>mensaje descriptivo del error devuelto desde el servidor</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"success\": false,\n  \"message\": \"No se encontro el id X\",\n  \"result\": null\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/department/",    "title": "Listar",    "version": "1.0.0",    "name": "GetAll",    "group": "Departamento",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/department/",        "type": "put"      }    ],    "description": "<p>Devuelve una lista de todos los Departamentos. Las Departamentos se devuelven ordenados por fecha de creación, los Departamentos más recientemente creados aparecen en primer lugar. Las columnas disponibles a mostrar son <code>id, name, phone, fax, address, lat, lng, photo, website</code></p>",    "filename": "source_doc/documentation.js",    "groupTitle": "Departamento",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve true si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "Integer",            "optional": false,            "field": "total",            "description": "<p>cantidad de registros devueltos.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>mensaje descriptivo de la informacion devuelta desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato json, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"total\"   : 5,\n  \"message\" : \"\",\n  \"result\"  : [\n         {\n             \"id\" : 135e656e6cda8640820350816ab59f2d,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/department/:id",    "title": "Leer",    "description": "<p>Recupera los detalles de un Departamento existente. Suministrar el <code>id</code> del Departamento para devolver la información de la Departamento correspondiente. La respuesta devuelve un conjunto de variables, la variable <code>result</code> contiene JSON con las siguientes columnas: <code>id, store_id, name, description, photo</code> y una colección de Productos (<code>products</code>).</p>",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>El <code>id</code> del Departamento que se está leyendo.</p>"          }        ]      }    },    "name": "GetDepartamento",    "group": "Departamento",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/department/135e656e6cda8640820350816ab59f2d",        "type": "put"      }    ],    "filename": "source_doc/documentation.js",    "groupTitle": "Departamento",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve true si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "Integer",            "optional": false,            "field": "total",            "description": "<p>cantidad de registros devueltos.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>mensaje descriptivo de la informacion devuelta desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato json, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"total\"   : 5,\n  \"message\" : \"\",\n  \"result\"  : [\n         {\n             \"id\" : 135e656e6cda8640820350816ab59f2d,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/address/:id",    "title": "Borrar",    "version": "1.0.0",    "group": "Direccion",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/address/135e656e6cda8640820350816ab59f2d",        "type": "delete"      }    ],    "description": "<p>Permite borrar una Dirección de entrega. Solo es posible suprimir la Dirección de entrega, si ésta aun no ha sido asociada a una <code>Orden</code>. Para eliminarla, debe indicar el <code>id</code> de la Dirección a borrar. La solicitud devuelve un objeto con un parámetro <code>success=true</code> en caso de éxito. De lo contrario, esta llamada devuelve un error ( <code>success=false</code> ) . Para mas información vease los ejemplos a continuación.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>El <code>id</code> de la Dirección de entrega que se va a borrar.</p>"          }        ]      }    },    "name": "BorraDireccion",    "filename": "source_doc/documentation.js",    "groupTitle": "Direccion",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>true</code> en caso de exito</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>mensaje descriptivo de la informacion devuelta desde el servidor</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\": true,\n  \"message\": \"Registro Borrado\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "success:false",            "description": "<p>ocurrio un error la ejecucion de la solicitud de borrado</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>mensaje descriptivo del error devuelto desde el servidor</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"success\": false,\n  \"message\": \"Ocurrio un error al intentar borrar\",\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/address/",    "title": "Crear",    "version": "1.0.0",    "name": "CreateDireccion",    "group": "Direccion",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/address/",        "type": "put"      }    ],    "description": "<p>Crea un nuevo objeto Direccion de entrega de Pedidos. Las columnas guardar son <code>customer_id, address, address2, lat, lng</code>. La solicitud retorna un JSON con la informacion con <code>status 200</code> en caso de tener exito, de lo contrario devuelve <code>status 400</code>. Para mas informacion vease los ejemplos a continuación.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "customer_id",            "description": "<p>el valor <code>id</code> del Cliente al cual pertenece la Dirección de entrega. <br> Ej. <code>customer_id</code>=135e656e6cda8640820350816ab59f2d.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "address",            "description": "<p>Descripcion de la dirección de entrega. Ej. Brisas a282,Corredor Nte.,Panama City</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "address2",            "description": "<p>Continuacion de la descripcion de la dirección de entrega.(Opcional)</p>"          },          {            "group": "Parameter",            "type": "Float",            "optional": true,            "field": "lat",            "description": "<p>coordenada latitud de la direccion de entrega del pedido, expresada en medida angular que varía entre los 0° del ecuador hasta los 90°. Ej. 8.97737</p>"          },          {            "group": "Parameter",            "type": "Float",            "optional": true,            "field": "lng",            "description": "<p>coordenada longitud de la direccion de entrega del pedido, expresada en medida angular que varía entre los 0° del ecuador hasta los 180°. Ej. -79.51831</p>"          }        ]      }    },    "filename": "source_doc/documentation.js",    "groupTitle": "Direccion",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>true</code> si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>Descripción del mensaje devuelto desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato <code>json</code>, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"message\" : \"la solicitud se realizo con exito\",\n  \"result\"  : [\n         {\n             \"id\" : 135e656e6cda8640820350816ab59f2d,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/address/:id",    "title": "Editar",    "version": "1.0.0",    "name": "EditDireccion",    "group": "Direccion",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/address/135e656e6cda8640820350816ab59f2d",        "type": "put"      }    ],    "description": "<p>Actualiza los detalles de la Direccion de entrega específica, mediante el identificación de los valores de los parámetros pasados. Cualquiera de los parámetros no previstos serán dejados sin cambios. Las columnas a actualizar son <code>customer_id, address, address2, lat, lng</code>. Tenga en cuenta que el atributo <code>id</code> no es editable. La solicitud retorna un JSON con la informacion con <code>status 200</code> en caso de tener exito, de lo contrario devuelve <code>status 400</code>. Para mas información vease los ejemplos a continuación.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "customer_id",            "description": "<p>el valor <code>id</code> del Cliente al cual pertenece la Dirección de entrega. <br> Ej. <code>customer_id</code>=135e656e6cda8640820350816ab59f2d.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "address",            "description": "<p>Descripcion de la dirección de entrega. Ej. Brisas a282,Corredor Nte.,Panama City</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "address2",            "description": "<p>Continuacion de la descripcion de la dirección de entrega.(Opcional)</p>"          },          {            "group": "Parameter",            "type": "Float",            "optional": true,            "field": "lat",            "description": "<p>coordenada latitud de la direccion de entrega del pedido, expresada en medida angular que varía entre los 0° del ecuador hasta los 90°. Ej. 8.97737</p>"          },          {            "group": "Parameter",            "type": "Float",            "optional": true,            "field": "lng",            "description": "<p>coordenada longitud de la direccion de entrega del pedido, expresada en medida angular que varía entre los 0° del ecuador hasta los 180°. Ej. -79.51831</p>"          }        ]      }    },    "filename": "source_doc/documentation.js",    "groupTitle": "Direccion",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>true</code> si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>Descripción del mensaje devuelto desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato <code>json</code>, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"message\" : \"la solicitud se realizo con exito\",\n  \"result\"  : [\n         {\n             \"id\" : 135e656e6cda8640820350816ab59f2d,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "success:false",            "description": "<p>ocurrio un error la ejecucion de la solicitud de borrado</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>mensaje descriptivo del error devuelto desde el servidor</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"success\": false,\n  \"message\": \"No se encontro el id X\",\n  \"result\": null\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/address/",    "title": "Listar",    "version": "1.0.0",    "name": "GetAll",    "group": "Direccion",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/department/",        "type": "put"      }    ],    "description": "<p>Devuelve una lista de todas las Direcciones. Las Direcciones se devuelven ordenadas por fecha de creación, las Direcciones más recientemente creados aparecen en primer lugar. Las columnas disponibles a mostrar son <code>id, customer_id, address, address2, lat, lng</code></p>",    "filename": "source_doc/documentation.js",    "groupTitle": "Direccion",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve true si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "Integer",            "optional": false,            "field": "total",            "description": "<p>cantidad de registros devueltos.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>mensaje descriptivo de la informacion devuelta desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato json, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"total\"   : 5,\n  \"message\" : \"\",\n  \"result\"  : [\n         {\n             \"id\" : 135e656e6cda8640820350816ab59f2d,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/address/:id",    "title": "Leer",    "description": "<p>Recupera los detalles de una Direccion de entrega de pedidos existente. Suministrar el <code>id</code> de la Direccion para devolver la información de correspondiente. La respuesta devuelve un conjunto de variables, la variable <code>result</code> contiene JSON con las siguientes columnas: <code>id, customer_id, address, address2, lat, lng</code> y una columna con la información del Cliente asociado a esta direccion (<code>customer</code>).</p>",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>El <code>id</code> de la Direccion que se está leyendo.</p>"          }        ]      }    },    "name": "GetDireccion",    "group": "Direccion",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/address/135e656e6cda8640820350816ab59f2d",        "type": "put"      }    ],    "filename": "source_doc/documentation.js",    "groupTitle": "Direccion",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve true si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "Integer",            "optional": false,            "field": "total",            "description": "<p>cantidad de registros devueltos.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>mensaje descriptivo de la informacion devuelta desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato json, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"total\"   : 5,\n  \"message\" : \"\",\n  \"result\"  : [\n         {\n             \"id\" : 135e656e6cda8640820350816ab59f2d,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/store/:id",    "title": "Borrar",    "version": "1.0.0",    "group": "Establecimiento",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/store/135e656e6cda8640820350816ab59f2d",        "type": "delete"      }    ],    "description": "<p>Permite borrar un Establecimiento. Solo es posible suprimir el Establecimiento, si éste no ha sido vinculado con un <code>Departamento</code>. Para eliminarlo, debe indicar el <code>id</code> del Establecimiento a borrar. La solicitud devuelve un objeto con un parámetro <code>success=true</code> en caso de éxito. De lo contrario, esta llamada devuelve un error ( <code>success=false</code> ) . Para mas información vease los ejemplos a continuación.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>El <code>id</code> del Establecimiento que se va a borrar.</p>"          }        ]      }    },    "name": "BorraEstablecimiento",    "filename": "source_doc/documentation.js",    "groupTitle": "Establecimiento",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>true</code> en caso de exito</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>mensaje descriptivo de la informacion devuelta desde el servidor</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\": true,\n  \"message\": \"Registro Borrado\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "success:false",            "description": "<p>ocurrio un error la ejecucion de la solicitud de borrado</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>mensaje descriptivo del error devuelto desde el servidor</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"success\": false,\n  \"message\": \"Ocurrio un error al intentar borrar\",\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/store/",    "title": "Crear",    "version": "1.0.0",    "name": "CreateEstablecimiento",    "group": "Establecimiento",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/store/",        "type": "put"      }    ],    "description": "<p>Crea un nuevo objeto Establecimiento. Las columnas guardar son <code>name, phone, fax, address, lat, lng, photo, website</code>. La solicitud retorna un JSON con la informacion con <code>status 200</code> en caso de tener exito, de lo contrario devuelve <code>status 400</code>. Para mas informacion vease los ejemplos a continuación.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "category_id",            "description": "<p>el valor <code>id</code> de la categoria a la cual pertenece el Establecimiento.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Nombre de la Establecimiento que se va a mostrar al usuario.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "phone",            "description": "<p>numero telefónico del establecimiento.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "fax",            "description": "<p>numero de fax del establecimiento.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "address",            "description": "<p>dirección de ubicación del establecimiento.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "photo",            "description": "<p>En esta columna se almacena el path de ubicación de la imagen a mostrar del establecimiento.</p>"          },          {            "group": "Parameter",            "type": "Float",            "optional": true,            "field": "lat",            "description": "<p>coordenada latitud del establecimiento expresada en medida angular que varía entre los 0° del ecuador hasta los 90°. Ej. 8.97737</p>"          },          {            "group": "Parameter",            "type": "Float",            "optional": true,            "field": "lng",            "description": "<p>coordenada longitud del establecimiento expresada en medida angular que varía entre los 0° del ecuador hasta los 180°. Ej. -79.51831</p>"          }        ]      }    },    "filename": "source_doc/documentation.js",    "groupTitle": "Establecimiento",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>true</code> si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>Descripción del mensaje devuelto desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato <code>json</code>, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"message\" : \"la solicitud se realizo con exito\",\n  \"result\"  : [\n         {\n             \"id\" : 135e656e6cda8640820350816ab59f2d,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/store/:id",    "title": "Editar",    "version": "1.0.0",    "name": "EditEstablecimiento",    "group": "Establecimiento",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/store/135e656e6cda8640820350816ab59f2d",        "type": "put"      }    ],    "description": "<p>Actualiza los detalles del Establecimiento específico, mediante el identificación de los valores de los parámetros pasados. Cualquiera de los parámetros no previstos serán dejados sin cambios. Las columnas a actualizar son <code>category_id, name, phone, fax, address, lat, lng, photo, website</code>. Tenga en cuenta que el atributo <code>id</code> no es editable. La solicitud retorna un JSON con la informacion con <code>status 200</code> en caso de tener exito, de lo contrario devuelve <code>status 400</code>. Para mas información vease los ejemplos a continuación.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>el <code>id</code> del establecimiento que se está actualizando.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "category_id",            "description": "<p>el valor <code>id</code> de la categoria a la cual pertenece el Establecimiento.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "phone",            "description": "<p>numero telefónico del establecimiento.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "fax",            "description": "<p>numero de fax del establecimiento.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "address",            "description": "<p>dirección de ubicación del establecimiento.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "photo",            "description": "<p>En esta columna se almacena el path de ubicación de la imagen a mostrar del establecimiento.</p>"          },          {            "group": "Parameter",            "type": "Float",            "optional": true,            "field": "lat",            "description": "<p>coordenada latitud del establecimiento expresada en medida angular que varía entre los 0° del ecuador hasta los 90°. Ej. 8.97737</p>"          },          {            "group": "Parameter",            "type": "Float",            "optional": true,            "field": "lng",            "description": "<p>coordenada longitud del establecimiento expresada en medida angular que varía entre los 0° del ecuador hasta los 180°. Ej. -79.51831</p>"          }        ]      }    },    "filename": "source_doc/documentation.js",    "groupTitle": "Establecimiento",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>true</code> si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>Descripción del mensaje devuelto desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato <code>json</code>, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"message\" : \"la solicitud se realizo con exito\",\n  \"result\"  : [\n         {\n             \"id\" : 135e656e6cda8640820350816ab59f2d,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "success:false",            "description": "<p>ocurrio un error la ejecucion de la solicitud de borrado</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>mensaje descriptivo del error devuelto desde el servidor</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"success\": false,\n  \"message\": \"No se encontro el id X\",\n  \"result\": null\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/store/",    "title": "Listar",    "version": "1.0.0",    "name": "GetAll",    "group": "Establecimiento",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/store/",        "type": "put"      }    ],    "description": "<p>Devuelve una lista de todos los Establecimientos. Las Establecimientos se devuelven ordenados por fecha de creación, las Establecimientos más recientemente creados aparecen en primer lugar. Las columnas disponibles a mostrar son <code>id, name, phone, fax, address, lat, lng, photo, website</code></p>",    "filename": "source_doc/documentation.js",    "groupTitle": "Establecimiento",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve true si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "Integer",            "optional": false,            "field": "total",            "description": "<p>cantidad de registros devueltos.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>mensaje descriptivo de la informacion devuelta desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato json, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"total\"   : 5,\n  \"message\" : \"\",\n  \"result\"  : [\n         {\n             \"id\" : 135e656e6cda8640820350816ab59f2d,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/store/:id",    "title": "Leer",    "description": "<p>Recupera los detalles de un Establecimiento existente. Suministrar el <code>id</code> del Establecimiento para devolver la información de la Establecimiento correspondiente. La respuesta devuelve un conjunto de variables, la variable <code>result</code> contiene JSON con las siguientes columnas: <code>id, category_id, name, phone, fax, address, lat, lng, photo, website</code>. <br>Tambien devuelve una coleccion de Departamentos (<code>departments</code>).</p>",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>El <code>id</code> del Establecimiento que se está leyendo.</p>"          }        ]      }    },    "name": "GetEstablecimiento",    "group": "Establecimiento",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/store/135e656e6cda8640820350816ab59f2d",        "type": "put"      }    ],    "filename": "source_doc/documentation.js",    "groupTitle": "Establecimiento",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve true si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "Integer",            "optional": false,            "field": "total",            "description": "<p>cantidad de registros devueltos.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>mensaje descriptivo de la informacion devuelta desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato json, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"total\"   : 5,\n  \"message\" : \"\",\n  \"result\"  : [\n         {\n             \"id\" : 135e656e6cda8640820350816ab59f2d,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/product/:id",    "title": "Borrar",    "version": "1.0.0",    "group": "Producto",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/product/135e656e6cda8640820350816ab59f2d",        "type": "delete"      }    ],    "description": "<p>Permite borrar un Producto. Solo es posible suprimir el Producto, si éste no ha sido vinculado con una <code>Orden</code>. Para eliminarlo, debe indicar el <code>id</code> del Producto a borrar. La solicitud devuelve un objeto con un parámetro <code>success=true</code> en caso de éxito. De lo contrario, esta llamada devuelve un error ( <code>success=false</code> ) . Para mas información vease los ejemplos a continuación.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>El <code>id</code> del Producto que se va a borrar.</p>"          }        ]      }    },    "name": "BorraProducto",    "filename": "source_doc/documentation.js",    "groupTitle": "Producto",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>true</code> en caso de exito</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>mensaje descriptivo de la informacion devuelta desde el servidor</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\": true,\n  \"message\": \"Registro Borrado\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "success:false",            "description": "<p>ocurrio un error la ejecucion de la solicitud de borrado</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>mensaje descriptivo del error devuelto desde el servidor</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"success\": false,\n  \"message\": \"Ocurrio un error al intentar borrar\",\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/product/",    "title": "Crear",    "version": "1.0.0",    "name": "CreateProducto",    "group": "Producto",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/product/",        "type": "put"      }    ],    "description": "<p>Crea un nuevo objeto Producto. Las columnas guardar son <code>department_id, name, description, reference, price, photo</code>. La solicitud retorna un JSON con la informacion con <code>status 200</code> en caso de tener exito, de lo contrario devuelve <code>status 400</code>. Para mas informacion vease los ejemplos a continuación.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "department_id",            "description": "<p>el valor <code>id</code> del Departamento al cual pertenece el Producto.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Nombre del Producto que se va a mostrar al usuario.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": "<p>La descripción del Producto que se va a mostrar al usuario.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "reference",            "description": "<p>Referencia del Producto.</p>"          },          {            "group": "Parameter",            "type": "Decimal",            "optional": true,            "field": "price",            "description": "<p>Precio de venta del Producto para mostrar. Ej. $57.99</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "photo",            "description": "<p>En esta columna se almacena el path de ubicación de la imagen a mostrar del producto.</p>"          }        ]      }    },    "filename": "source_doc/documentation.js",    "groupTitle": "Producto",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>true</code> si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>Descripción del mensaje devuelto desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato <code>json</code>, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"message\" : \"la solicitud se realizo con exito\",\n  \"result\"  : [\n         {\n             \"id\" : 135e656e6cda8640820350816ab59f2d,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/product/:id",    "title": "Editar",    "version": "1.0.0",    "name": "EditProducto",    "group": "Producto",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/product/135e656e6cda8640820350816ab59f2d",        "type": "put"      }    ],    "description": "<p>Actualiza los detalles del Producto específico, mediante el identificación de los valores de los parámetros pasados. Cualquiera de los parámetros no previstos serán dejados sin cambios. Las columnas a actualizar son <code>department_id, name, description, reference, price, photo</code>. Tenga en cuenta que el atributo <code>id</code> no es editable. La solicitud retorna un JSON con la informacion con <code>status 200</code> en caso de tener exito, de lo contrario devuelve <code>status 400</code>. Para mas información vease los ejemplos a continuación.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "department_id",            "description": "<p>el valor <code>id</code> del Departamento al cual pertenece el Producto.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Nombre del Producto que se va a mostrar al usuario.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": "<p>La descripción del Producto que se va a mostrar al usuario.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "reference",            "description": "<p>Referencia del Producto.</p>"          },          {            "group": "Parameter",            "type": "Decimal",            "optional": true,            "field": "price",            "description": "<p>Precio de venta del Producto para mostrar. Ej. $57.99</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "photo",            "description": "<p>En esta columna se almacena el path de ubicación de la imagen a mostrar del producto.</p>"          }        ]      }    },    "filename": "source_doc/documentation.js",    "groupTitle": "Producto",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>true</code> si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>Descripción del mensaje devuelto desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato <code>json</code>, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"message\" : \"la solicitud se realizo con exito\",\n  \"result\"  : [\n         {\n             \"id\" : 135e656e6cda8640820350816ab59f2d,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "success:false",            "description": "<p>ocurrio un error la ejecucion de la solicitud de borrado</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>mensaje descriptivo del error devuelto desde el servidor</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"success\": false,\n  \"message\": \"No se encontro el id X\",\n  \"result\": null\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/product/",    "title": "Listar",    "version": "1.0.0",    "name": "GetAll",    "group": "Producto",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/product/",        "type": "put"      }    ],    "description": "<p>Devuelve una lista de todos los Productos. Las Productos se devuelven ordenados por fecha de creación, los Productos más recientemente creados aparecen en primer lugar. Las columnas disponibles a mostrar son <code>id, department_id, name, description, reference, price, photo</code></p>",    "filename": "source_doc/documentation.js",    "groupTitle": "Producto",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve true si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "Integer",            "optional": false,            "field": "total",            "description": "<p>cantidad de registros devueltos.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>mensaje descriptivo de la informacion devuelta desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato json, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"total\"   : 5,\n  \"message\" : \"\",\n  \"result\"  : [\n         {\n             \"id\" : 135e656e6cda8640820350816ab59f2d,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/product/:id",    "title": "Leer",    "description": "<p>Recupera los detalles de un Producto existente. Suministrar el <code>id</code> del Producto para devolver la información de la Producto correspondiente. La respuesta devuelve un conjunto de variables, la variable <code>result</code> contiene JSON con las siguientes columnas: <code>id, department_id, name, description, reference, price, photo</code>.</p>",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>El <code>id</code> del Producto que se está leyendo.</p>"          }        ]      }    },    "name": "GetProducto",    "group": "Producto",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/product/135e656e6cda8640820350816ab59f2d",        "type": "put"      }    ],    "filename": "source_doc/documentation.js",    "groupTitle": "Producto",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve true si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "Integer",            "optional": false,            "field": "total",            "description": "<p>cantidad de registros devueltos.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>mensaje descriptivo de la informacion devuelta desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato json, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"total\"   : 5,\n  \"message\" : \"\",\n  \"result\"  : [\n         {\n             \"id\" : 135e656e6cda8640820350816ab59f2d,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/deliveryman/:id",    "title": "Borrar",    "version": "1.0.0",    "group": "Repartidor",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/product/135e656e6cda8640820350816ab59f2d",        "type": "delete"      }    ],    "description": "<p>Permite borrar un Repartidor. Solo es posible suprimir el Repartidor, si éste no ha sido vinculado con una <code>Orden</code>. Para eliminarlo, debe indicar el <code>id</code> del Repartidor a borrar. La solicitud devuelve un objeto con un parámetro <code>success=true</code> en caso de éxito. De lo contrario, esta llamada devuelve un error ( <code>success=false</code> ) . Para mas información vease los ejemplos a continuación.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>El <code>id</code> del Repartidor que se va a borrar.</p>"          }        ]      }    },    "name": "BorraRepartidor",    "filename": "source_doc/documentation.js",    "groupTitle": "Repartidor",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>true</code> en caso de exito</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>mensaje descriptivo de la informacion devuelta desde el servidor</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\": true,\n  \"message\": \"Registro Borrado\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "success:false",            "description": "<p>ocurrio un error la ejecucion de la solicitud de borrado</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>mensaje descriptivo del error devuelto desde el servidor</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"success\": false,\n  \"message\": \"Ocurrio un error al intentar borrar\",\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/deliveryman/",    "title": "Crear",    "version": "1.0.0",    "name": "CreateRepartidor",    "group": "Repartidor",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/deliveryman/",        "type": "put"      }    ],    "description": "<p>Crea un nuevo objeto Repartidor. Las columnas guardar son <code>first_name, last_name, email, password, photo, phone, security_question, answer</code>. La solicitud retorna un JSON con la informacion con <code>status 200</code> en caso de tener exito, de lo contrario devuelve <code>status 400</code>. Para mas información vease los ejemplos a continuación.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "first_name",            "description": "<p>Nombres del  Repartidor.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "last_name",            "description": "<p>Apellidos del Repartidor.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Direccion de correo electronico, ésta columna es obligatoria para iniciar sesión.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>Clave de acceso, ésta columna es obligatoria para iniciar sesión.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "photo",            "description": "<p>En esta columna se almacena el path de ubicación de la imagen de perfil del repartidor.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "phone",            "description": "<p>Numero telefonico de contacto al cliente.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "security_question",            "description": "<p>Pregunta de seguridad para recuperar clave de usuario.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "answer",            "description": "<p>Respuesta a la pregunta de seguridad para recuperar clave de usuario.</p>"          }        ]      }    },    "filename": "source_doc/documentation.js",    "groupTitle": "Repartidor",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>true</code> si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>Descripción del mensaje devuelto desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato <code>json</code>, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"message\" : \"la solicitud se realizo con exito\",\n  \"result\"  : [\n         {\n             \"id\" : 135e656e6cda8640820350816ab59f2d,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/deliveryman/:id",    "title": "Editar",    "version": "1.0.0",    "name": "EditRepartidor",    "group": "Repartidor",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/deliveryman/135e656e6cda8640820350816ab59f2d",        "type": "put"      }    ],    "description": "<p>Actualiza los detalles del Repartidor específico, mediante la identificación de los valores de los parámetros suministrados. Cualquiera de los parámetros no previstos serán dejados sin cambios. Las columnas a actualizar son<br> <code>first_name, last_name, email, password, photo, phone, security_question, answer</code>.<br> Tenga en cuenta que el atributo <code>id</code> no es editable. La solicitud retorna un JSON con la informacion con <code>status 200</code> en caso de tener exito, de lo contrario devuelve <code>status 400</code>. Para mas información vease los ejemplos a continuación.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "first_name",            "description": "<p>Nombres del  Repartidor.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "last_name",            "description": "<p>Apellidos del Repartidor.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Direccion de correo electronico, ésta columna es obligatoria para iniciar sesión.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>Clave de acceso, ésta columna es obligatoria para iniciar sesión.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "photo",            "description": "<p>En esta columna se almacena el path de ubicación de la imagen de perfil del repartidor.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "phone",            "description": "<p>Numero telefonico de contacto al cliente.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "security_question",            "description": "<p>Pregunta de seguridad para recuperar clave de usuario.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "answer",            "description": "<p>Respuesta a la pregunta de seguridad para recuperar clave de usuario.</p>"          }        ]      }    },    "filename": "source_doc/documentation.js",    "groupTitle": "Repartidor",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>true</code> si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>Descripción del mensaje devuelto desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato <code>json</code>, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"message\" : \"la solicitud se realizo con exito\",\n  \"result\"  : [\n         {\n             \"id\" : 135e656e6cda8640820350816ab59f2d,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "success:false",            "description": "<p>ocurrio un error la ejecucion de la solicitud de borrado</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>mensaje descriptivo del error devuelto desde el servidor</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"success\": false,\n  \"message\": \"No se encontro el id X\",\n  \"result\": null\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/deliveryman/",    "title": "Listar",    "version": "1.0.0",    "name": "GetAll",    "group": "Repartidor",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/deliveryman/",        "type": "put"      }    ],    "description": "<p>Devuelve una lista de todos los Repartidores. Los Repartidores se devuelven ordenados por fecha de creación, los Repartidores más recientemente creados aparecen en primer lugar. Las columnas disponibles a mostrar son <code>id, first_name, last_name, email, photo, phone, security_question, answer</code></p>",    "filename": "source_doc/documentation.js",    "groupTitle": "Repartidor",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve true si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "Integer",            "optional": false,            "field": "total",            "description": "<p>cantidad de registros devueltos.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>mensaje descriptivo de la informacion devuelta desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato json, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"total\"   : 5,\n  \"message\" : \"\",\n  \"result\"  : [\n         {\n             \"id\" : 135e656e6cda8640820350816ab59f2d,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/deliveryman/:id",    "title": "Leer",    "description": "<p>Recupera los detalles de un Repartidor existente. Suministrar el <code>id</code> del Repartidor para devolver la información del Repartidor correspondiente. La respuesta devuelve un conjunto de variables, la variable <code>result</code> contiene JSON con las siguientes columnas: <br> <code>id, first_name, last_name, email, password, photo, phone, security_question, answer</code>. <br>Tambien devuelve un array de las tarjetas (<code>cards</code>) y direcciones de entrega (<code>address</code>) asociadas al cliente.</p>",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>El <code>id</code> del Repartidor que se está leyendo.</p>"          }        ]      }    },    "name": "GetRepartidor",    "group": "Repartidor",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/deliveryman/135e656e6cda8640820350816ab59f2d",        "type": "put"      }    ],    "filename": "source_doc/documentation.js",    "groupTitle": "Repartidor",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve true si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "Integer",            "optional": false,            "field": "total",            "description": "<p>cantidad de registros devueltos.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>mensaje descriptivo de la informacion devuelta desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato json, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"total\"   : 5,\n  \"message\" : \"\",\n  \"result\"  : [\n         {\n             \"id\" : 135e656e6cda8640820350816ab59f2d,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/deliveryman/login/",    "title": "Login",    "version": "1.0.0",    "name": "LoginRepartidor",    "group": "Repartidor",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/deliveryman/login",        "type": "post"      }    ],    "description": "<p>Valida los datos suministrados para el inicio de sesion (<code>email</code> y <code>password</code>). La solicitud retorna un JSON con la informacion con <code>status 200</code> en caso de tener exito, de lo contrario devuelve <code>status 400</code>. Para mas información vease los ejemplos a continuación.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Direccion de correo electronico del repartidor usada como usuario de acceso a la app.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>Clave de acceso del repartidor usada para iniciar sesion en la app.</p>"          }        ]      }    },    "filename": "source_doc/documentation.js",    "groupTitle": "Repartidor",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>true</code> si los datos fueron validados y autorizados por el servidor.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>Descripción del mensaje devuelto desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato <code>json</code>, de la entidad autorizada.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n      \"success\": true,\n      \"message\": \"Bienvenido al sistema toolvendor\",\n      \"tokenId\": \"eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiIxIiwiaWF0IjoxNDg1ODY2OTQ3LCJzdWIiOiIxIiwiaXNzIjoiTHVpcyBNYW51ZWwgVmVzcGEifQ.4MM6CZxv1NVCDo5Fugqs-h3ERcQWhMCuH8stTcETglM\",\n      \"result\": {\n             \"id\": 1,\n             \"createdAt\": 1483594440000,\n             \"email\": \"vespaluis@gmail.com\",\n             \"enabled\": true,\n             \"lastUpdate\": null,\n             \"latitud\": null,\n             \"longitude\": null,\n             \"name\": \"Luis Manuel Vespa\",\n             \"password\": \"vt1cowt0\",\n             \"phone\": \"+50760846611\",\n             \"photo\": \"user.png\",\n             \"usertype\": {\n               \"id\": 1,\n               \"description\": \"SUPER ADMIN\",\n               \"type\": \"A\",\n               \"companyId\": 1\n             },\n             \"companyId\": 1,\n             \"city\": {\n               \"id\": 1,\n               \"country\": {\n                 \"id\": 1,\n                 \"name\": \"Panama\",\n                 \"alpha2\": \"PA\",\n                 \"alpha3\": \"PAN\",\n                 \"number\": null\n               },\n               \"city\": \"Ciudad Panama\"\n             },\n             \"country\": {\n               \"id\": 1,\n               \"name\": \"Panama\",\n               \"alpha2\": \"PA\",\n               \"alpha3\": \"PAN\",\n               \"number\": null\n             }\n      }\n  }",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>false</code> si los datos NO fueron autorizados por el servidor para iniciar sesion.</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>Descripción del mensaje devuelto desde el servidor.</p>"          },          {            "group": "Error 4xx",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>devuelve <code>null</code>, debido a que los parametros suministrados no fue validados por el servidor.</p>"          }        ]      },      "examples": [        {          "title": "HTTP/1.1 401 Unauthorized",          "content": " HTTP/1.1 401 Unauthorized\n{\n     \"success\": false,\n     \"message\": \"The username or password is invalid.\"\n }",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/card/:id",    "title": "Borrar",    "version": "1.0.0",    "group": "Tarjeta",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/card/135e656e6cda8640820350816ab59f2d",        "type": "delete"      }    ],    "description": "<p>Permite borrar una Tarjeta. Solo es posible suprimir la Tarjeta, si ésta no ha sido vinculada con una <code>Orden</code>. Para eliminarla, debe indicar el <code>id</code> de la Tarjeta a borrar. La solicitud devuelve un objeto con un parámetro <code>success=true</code> en caso de éxito. De lo contrario, esta llamada devuelve un error ( <code>success=false</code> ) . Para mas información vease los ejemplos a continuación.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>El <code>id</code> de la Tarjeta que se va a borrar.</p>"          }        ]      }    },    "name": "BorraTarjeta",    "filename": "source_doc/documentation.js",    "groupTitle": "Tarjeta",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>true</code> en caso de exito</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>mensaje descriptivo de la informacion devuelta desde el servidor</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\": true,\n  \"message\": \"Registro Borrado\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "success:false",            "description": "<p>ocurrio un error la ejecucion de la solicitud de borrado</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>mensaje descriptivo del error devuelto desde el servidor</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"success\": false,\n  \"message\": \"Ocurrio un error al intentar borrar\",\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/card/",    "title": "Crear",    "version": "1.0.0",    "name": "CreateTarjeta",    "group": "Tarjeta",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/card/",        "type": "put"      }    ],    "description": "<p>Crea un nuevo objeto Tarjeta. Las columnas guardar son <code>customer_id, card_number, name_on_card, exp_date, ccv, type</code>. La solicitud retorna un JSON con la informacion con <code>status 200</code> en caso de tener exito, de lo contrario devuelve <code>status 400</code>. Para mas informacion vease los ejemplos a continuación.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "customer_id",            "description": "<p>el valor <code>id</code> del Cliente al cual pertenece la Tarjeta. <br> Ej. <code>customer_id</code>=135e656e6cda8640820350816ab59f2d.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "card_number",            "description": "<p>Numero que aparece en la parte frontal de la Tarjeta. Compuesto por 16 numeros en grupos de 4 numeros, separados por guion. Ej 1234-5678-9012-3456.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name_on_card",            "description": "<p>Nombre impreso en la tarjeta. Ej. JOHN A DOE.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "exp_date",            "description": "<p>Fecha de vencimiento de la tarjeta. Ej. <code>05-19</code>  o  <code>05/19</code>.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "ccv",            "description": "<p>Numeros del ultimo bloque de 3 digitos impresos por el reverso de la tarjeta. Ej. 1234-5678-9012-3456 <span class='label label-alert'>789</span>.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "type",            "description": "<p>Tipo de tarjeta: <code>VISA, MASTER, DINERS, AMERICAN EXPRESS   </code></p>"          }        ]      }    },    "filename": "source_doc/documentation.js",    "groupTitle": "Tarjeta",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>true</code> si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>Descripción del mensaje devuelto desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato <code>json</code>, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"message\" : \"la solicitud se realizo con exito\",\n  \"result\"  : [\n         {\n             \"id\" : 135e656e6cda8640820350816ab59f2d,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/card/:id",    "title": "Editar",    "version": "1.0.0",    "name": "EditTarjeta",    "group": "Tarjeta",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/card/135e656e6cda8640820350816ab59f2d",        "type": "put"      }    ],    "description": "<p>Actualiza los detalles de la Tarjeta específica, mediante el identificación de los valores de los parámetros pasados. Cualquiera de los parámetros no previstos serán dejados sin cambios. Las columnas a actualizar son <code>id, customer_id, card_number, name_on_card, exp_date, ccv, type</code>. Tenga en cuenta que el atributo <code>id</code> no es editable. La solicitud retorna un JSON con la informacion con <code>status 200</code> en caso de tener exito, de lo contrario devuelve <code>status 400</code>. Para mas información vease los ejemplos a continuación.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "customer_id",            "description": "<p>el valor <code>id</code> del Cliente al cual pertenece la Tarjeta.<br> Ej. <code>customer_id</code>=135e656e6cda8640820350816ab59f2d.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "card_number",            "description": "<p>Numero que aparece en la parte frontal de la Tarjeta. Compuesto por 16 numeros en grupos de 4 numeros, separados por guion. Ej 1234-5678-9012-3456.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name_on_card",            "description": "<p>Nombre impreso en la tarjeta. Ej. JOHN A DOE.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "exp_date",            "description": "<p>Fecha de vencimiento de la tarjeta. Ej. <code>05-19</code>  o  <code>05/19</code>.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "ccv",            "description": "<p>Numeros del ultimo bloque de 3 digitos impresos por el reverso de la tarjeta. Ej. 1234-5678-9012-3456 <span class='label label-alert'>789</span>.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "type",            "description": "<p>Tipo de tarjeta: <code>VISA, MASTER, DINERS, AMERICAN EXPRESS   </code></p>"          }        ]      }    },    "filename": "source_doc/documentation.js",    "groupTitle": "Tarjeta",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve <code>true</code> si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>Descripción del mensaje devuelto desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato <code>json</code>, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"message\" : \"la solicitud se realizo con exito\",\n  \"result\"  : [\n         {\n             \"id\" : 135e656e6cda8640820350816ab59f2d,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "success:false",            "description": "<p>ocurrio un error la ejecucion de la solicitud de borrado</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>mensaje descriptivo del error devuelto desde el servidor</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"success\": false,\n  \"message\": \"No se encontro el id X\",\n  \"result\": null\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/card/",    "title": "Listar",    "version": "1.0.0",    "name": "GetAll",    "group": "Tarjeta",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/department/",        "type": "put"      }    ],    "description": "<p>Devuelve una lista de todas las Tarjetas. Las Tarjetas se devuelven ordenadas por fecha de creación, las Tarjetas más recientemente creados aparecen en primer lugar. Las columnas disponibles a mostrar son <code>id, customer_id, card_number, name_on_card, exp_date, ccv, type</code></p>",    "filename": "source_doc/documentation.js",    "groupTitle": "Tarjeta",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve true si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "Integer",            "optional": false,            "field": "total",            "description": "<p>cantidad de registros devueltos.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>mensaje descriptivo de la informacion devuelta desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato json, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"total\"   : 5,\n  \"message\" : \"\",\n  \"result\"  : [\n         {\n             \"id\" : 135e656e6cda8640820350816ab59f2d,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/card/:id",    "title": "Leer",    "description": "<p>Recupera los detalles de una Tarjeta existente. Suministrar el <code>id</code> de la Tarjeta para devolver la información de correspondiente. La respuesta devuelve un conjunto de variables, la variable <code>result</code> contiene JSON con las siguientes columnas: <code>id, customer_id, card_number, name_on_card, exp_date, ccv, type</code> y una columna con la información del Cliente (<code>customer</code>).</p>",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>El <code>id</code> de la Tarjeta que se está leyendo.</p>"          }        ]      }    },    "name": "GetTarjeta",    "group": "Tarjeta",    "examples": [      {        "title": "Ejemplo de Solicitud:",        "content": "https://apirestfm.herokuapp.com/api/card/135e656e6cda8640820350816ab59f2d",        "type": "put"      }    ],    "filename": "source_doc/documentation.js",    "groupTitle": "Tarjeta",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>devuelve true si la solicitud tuvo exito.</p>"          },          {            "group": "Success 200",            "type": "Integer",            "optional": false,            "field": "total",            "description": "<p>cantidad de registros devueltos.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "mesasge",            "description": "<p>mensaje descriptivo de la informacion devuelta desde el servidor.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>contiene un arreglo de objetos en formato json, contenedor de todos los registros.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\" : true,\n  \"total\"   : 5,\n  \"message\" : \"\",\n  \"result\"  : [\n         {\n             \"id\" : 135e656e6cda8640820350816ab59f2d,\n             \"field_1\" : \"valor 1\",\n             \"field_2\" : \"valor 2\",\n             \"field_n\" : \"valor n\"\n         }\n     ]\n}",          "type": "json"        }      ]    }  }]
